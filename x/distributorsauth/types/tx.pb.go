// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: entangle/distributorsauth/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgAddDistributor defines a AddDistributor message
type MsgAddDistributor struct {
	// sender of the message
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// distributor_address is the address of the distributor account.
	DistributorAddress string `protobuf:"bytes,2,opt,name=distributor_address,json=distributorAddress,proto3" json:"distributor_address,omitempty"`
	// end_date is the date when the distributor account will be removed.
	EndDate uint64 `protobuf:"varint,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (m *MsgAddDistributor) Reset()         { *m = MsgAddDistributor{} }
func (m *MsgAddDistributor) String() string { return proto.CompactTextString(m) }
func (*MsgAddDistributor) ProtoMessage()    {}
func (*MsgAddDistributor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{0}
}
func (m *MsgAddDistributor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddDistributor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddDistributor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddDistributor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddDistributor.Merge(m, src)
}
func (m *MsgAddDistributor) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddDistributor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddDistributor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddDistributor proto.InternalMessageInfo

func (m *MsgAddDistributor) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAddDistributor) GetDistributorAddress() string {
	if m != nil {
		return m.DistributorAddress
	}
	return ""
}

func (m *MsgAddDistributor) GetEndDate() uint64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

// MsgAddDistributorResponse defines the MsgAddDistributor response type.
type MsgAddDistributorResponse struct {
}

func (m *MsgAddDistributorResponse) Reset()         { *m = MsgAddDistributorResponse{} }
func (m *MsgAddDistributorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddDistributorResponse) ProtoMessage()    {}
func (*MsgAddDistributorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{1}
}
func (m *MsgAddDistributorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddDistributorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddDistributorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddDistributorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddDistributorResponse.Merge(m, src)
}
func (m *MsgAddDistributorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddDistributorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddDistributorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddDistributorResponse proto.InternalMessageInfo

// MsgRemoveDistributor defines a RemoveDistributor message
type MsgRemoveDistributor struct {
	// sender of the message
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// distributor_address is the address of the distributor account.
	DistributorAddress string `protobuf:"bytes,2,opt,name=distributor_address,json=distributorAddress,proto3" json:"distributor_address,omitempty"`
}

func (m *MsgRemoveDistributor) Reset()         { *m = MsgRemoveDistributor{} }
func (m *MsgRemoveDistributor) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveDistributor) ProtoMessage()    {}
func (*MsgRemoveDistributor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{2}
}
func (m *MsgRemoveDistributor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveDistributor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveDistributor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveDistributor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveDistributor.Merge(m, src)
}
func (m *MsgRemoveDistributor) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveDistributor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveDistributor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveDistributor proto.InternalMessageInfo

func (m *MsgRemoveDistributor) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoveDistributor) GetDistributorAddress() string {
	if m != nil {
		return m.DistributorAddress
	}
	return ""
}

// MsgRemoveDistributorResponse defines the MsgRemoveDistributor response type.
type MsgRemoveDistributorResponse struct {
}

func (m *MsgRemoveDistributorResponse) Reset()         { *m = MsgRemoveDistributorResponse{} }
func (m *MsgRemoveDistributorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveDistributorResponse) ProtoMessage()    {}
func (*MsgRemoveDistributorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{3}
}
func (m *MsgRemoveDistributorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveDistributorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveDistributorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveDistributorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveDistributorResponse.Merge(m, src)
}
func (m *MsgRemoveDistributorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveDistributorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveDistributorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveDistributorResponse proto.InternalMessageInfo

// MsgAddAdmin defines a AddAdmin message
type MsgAddAdmin struct {
	// sender of the message
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// admin_address is the address of the admin account.
	AdminAddress string `protobuf:"bytes,2,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
	// edit_option is the option to edit the admin account.
	EditOption bool `protobuf:"varint,3,opt,name=edit_option,json=editOption,proto3" json:"edit_option,omitempty"`
}

func (m *MsgAddAdmin) Reset()         { *m = MsgAddAdmin{} }
func (m *MsgAddAdmin) String() string { return proto.CompactTextString(m) }
func (*MsgAddAdmin) ProtoMessage()    {}
func (*MsgAddAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{4}
}
func (m *MsgAddAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAdmin.Merge(m, src)
}
func (m *MsgAddAdmin) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAdmin proto.InternalMessageInfo

func (m *MsgAddAdmin) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAddAdmin) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

func (m *MsgAddAdmin) GetEditOption() bool {
	if m != nil {
		return m.EditOption
	}
	return false
}

// MsgAddAdminResponse defines the MsgAddAdmin response type.
type MsgAddAdminResponse struct {
}

func (m *MsgAddAdminResponse) Reset()         { *m = MsgAddAdminResponse{} }
func (m *MsgAddAdminResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAdminResponse) ProtoMessage()    {}
func (*MsgAddAdminResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{5}
}
func (m *MsgAddAdminResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAdminResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAdminResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAdminResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAdminResponse.Merge(m, src)
}
func (m *MsgAddAdminResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAdminResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAdminResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAdminResponse proto.InternalMessageInfo

// MsgRemoveAdmin defines a RemoveAdmin message
type MsgRemoveAdmin struct {
	// sender of the message
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// admin_address is the address of the admin account.
	AdminAddress string `protobuf:"bytes,2,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
}

func (m *MsgRemoveAdmin) Reset()         { *m = MsgRemoveAdmin{} }
func (m *MsgRemoveAdmin) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAdmin) ProtoMessage()    {}
func (*MsgRemoveAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{6}
}
func (m *MsgRemoveAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAdmin.Merge(m, src)
}
func (m *MsgRemoveAdmin) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAdmin proto.InternalMessageInfo

func (m *MsgRemoveAdmin) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoveAdmin) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

// MsgRemoveAdminResponse defines the MsgRemoveAdmin response type.
type MsgRemoveAdminResponse struct {
}

func (m *MsgRemoveAdminResponse) Reset()         { *m = MsgRemoveAdminResponse{} }
func (m *MsgRemoveAdminResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAdminResponse) ProtoMessage()    {}
func (*MsgRemoveAdminResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1153db903e02ca2, []int{7}
}
func (m *MsgRemoveAdminResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAdminResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAdminResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAdminResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAdminResponse.Merge(m, src)
}
func (m *MsgRemoveAdminResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAdminResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAdminResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAdminResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAddDistributor)(nil), "entangle.distributorsauth.MsgAddDistributor")
	proto.RegisterType((*MsgAddDistributorResponse)(nil), "entangle.distributorsauth.MsgAddDistributorResponse")
	proto.RegisterType((*MsgRemoveDistributor)(nil), "entangle.distributorsauth.MsgRemoveDistributor")
	proto.RegisterType((*MsgRemoveDistributorResponse)(nil), "entangle.distributorsauth.MsgRemoveDistributorResponse")
	proto.RegisterType((*MsgAddAdmin)(nil), "entangle.distributorsauth.MsgAddAdmin")
	proto.RegisterType((*MsgAddAdminResponse)(nil), "entangle.distributorsauth.MsgAddAdminResponse")
	proto.RegisterType((*MsgRemoveAdmin)(nil), "entangle.distributorsauth.MsgRemoveAdmin")
	proto.RegisterType((*MsgRemoveAdminResponse)(nil), "entangle.distributorsauth.MsgRemoveAdminResponse")
}

func init() {
	proto.RegisterFile("entangle/distributorsauth/tx.proto", fileDescriptor_e1153db903e02ca2)
}

var fileDescriptor_e1153db903e02ca2 = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0x6d, 0x1a, 0xe5, 0x15, 0x26, 0x2d, 0xdd, 0xaa, 0x26, 0xad, 0xcc, 0x30, 0x08,
	0x0d, 0x89, 0xc5, 0xe2, 0x87, 0xc4, 0xb9, 0x68, 0x1c, 0x38, 0x54, 0xa0, 0x1c, 0xb9, 0x44, 0x6e,
	0x6c, 0xa5, 0xd1, 0x5a, 0x3b, 0x8a, 0x5d, 0x18, 0x27, 0x24, 0xae, 0x5c, 0x90, 0x38, 0xf0, 0x07,
	0xf0, 0xcf, 0x70, 0x9c, 0x04, 0x07, 0x8e, 0xa8, 0xe5, 0x0f, 0x41, 0x71, 0x5a, 0xaf, 0xb4, 0x1d,
	0x74, 0x42, 0xdc, 0xe2, 0xe7, 0xef, 0xf3, 0xf7, 0xe3, 0xe7, 0x97, 0x07, 0x98, 0x0b, 0x4d, 0x45,
	0x32, 0xe0, 0x84, 0xa5, 0x4a, 0xe7, 0x69, 0x6f, 0xa4, 0x65, 0xae, 0xe8, 0x48, 0xf7, 0x89, 0x3e,
	0x0d, 0xb2, 0x5c, 0x6a, 0xe9, 0x7a, 0x33, 0x4d, 0xb0, 0xa8, 0xf1, 0xbd, 0x58, 0xaa, 0xa1, 0x54,
	0x91, 0x11, 0x92, 0x72, 0x51, 0x66, 0xf9, 0x7b, 0x89, 0x4c, 0x64, 0x19, 0x2f, 0xbe, 0xa6, 0xd1,
	0x76, 0x22, 0x65, 0xe1, 0x46, 0xb3, 0x94, 0x50, 0x21, 0xa4, 0xa6, 0x3a, 0x95, 0x62, 0x9a, 0x83,
	0x5f, 0xc3, 0x6e, 0x57, 0x25, 0x1d, 0xc6, 0x8e, 0xcf, 0x8d, 0xdc, 0x06, 0x6c, 0x2b, 0x2e, 0x18,
	0xcf, 0x9b, 0xce, 0x81, 0x73, 0x78, 0x35, 0x9c, 0xae, 0x5c, 0x02, 0xf5, 0x39, 0x9e, 0x88, 0x32,
	0x96, 0x73, 0xa5, 0x9a, 0x1b, 0x46, 0xe4, 0xce, 0x6d, 0x75, 0xca, 0x1d, 0xd7, 0x83, 0x2a, 0x17,
	0x2c, 0x62, 0x54, 0xf3, 0xe6, 0xe6, 0x81, 0x73, 0xb8, 0x15, 0x5e, 0xe1, 0x82, 0x1d, 0x53, 0xcd,
	0x71, 0x0b, 0xbc, 0x25, 0xe3, 0x90, 0xab, 0x4c, 0x0a, 0xc5, 0x71, 0x04, 0x7b, 0x5d, 0x95, 0x84,
	0x7c, 0x28, 0x5f, 0xf1, 0xff, 0x01, 0x86, 0x11, 0xb4, 0x57, 0x19, 0x58, 0x80, 0x13, 0xa8, 0x95,
	0x74, 0x1d, 0x36, 0x4c, 0xc5, 0x85, 0xbe, 0xb7, 0xe0, 0x3a, 0x2d, 0x04, 0x0b, 0x8e, 0xd7, 0x4c,
	0x70, 0x56, 0x84, 0x1b, 0x50, 0xe3, 0x2c, 0xd5, 0x91, 0xcc, 0x8a, 0xc2, 0x9b, 0x3a, 0x54, 0x43,
	0x28, 0x42, 0xcf, 0x4d, 0x04, 0xef, 0x43, 0x7d, 0xce, 0xcc, 0x32, 0x74, 0x61, 0xc7, 0x32, 0xfe,
	0x3b, 0x06, 0x6e, 0x42, 0xe3, 0xf7, 0xe3, 0x66, 0x46, 0x0f, 0xbe, 0x6d, 0xc1, 0x66, 0x57, 0x25,
	0xee, 0x27, 0x07, 0x76, 0x16, 0x3a, 0xe1, 0x5e, 0x70, 0x61, 0x27, 0x06, 0x4b, 0xcf, 0xe7, 0x3f,
	0xba, 0x8c, 0xda, 0xde, 0xf3, 0xe6, 0xbb, 0xaf, 0x3f, 0x3f, 0x6e, 0xb4, 0xb0, 0x47, 0x56, 0xfd,
	0x19, 0x84, 0x32, 0xe6, 0x7e, 0x76, 0x60, 0x77, 0xb9, 0x1b, 0xc8, 0x9f, 0xed, 0x96, 0x12, 0xfc,
	0xc7, 0x97, 0x4c, 0xb0, 0x88, 0xb7, 0x0d, 0x22, 0xc2, 0xed, 0xd5, 0x88, 0xb9, 0x49, 0x74, 0xdf,
	0x42, 0xd5, 0x76, 0xcc, 0x9d, 0xbf, 0x96, 0xc2, 0xe8, 0xfc, 0x60, 0x3d, 0x9d, 0x25, 0x69, 0x19,
	0x92, 0x7d, 0x5c, 0x3f, 0x27, 0x31, 0xaf, 0x6c, 0xca, 0xf4, 0xde, 0x81, 0xda, 0x7c, 0xbf, 0xdc,
	0x5d, 0xe7, 0xbe, 0x25, 0xc7, 0xfd, 0xb5, 0xa5, 0x16, 0x05, 0x19, 0x94, 0x26, 0x6e, 0x2c, 0xa2,
	0x94, 0xe5, 0x78, 0x12, 0x7f, 0x19, 0x23, 0xe7, 0x6c, 0x8c, 0x9c, 0x1f, 0x63, 0xe4, 0x7c, 0x98,
	0xa0, 0xca, 0xd9, 0x04, 0x55, 0xbe, 0x4f, 0x50, 0xe5, 0xe5, 0xb3, 0x24, 0xd5, 0xfd, 0x51, 0x2f,
	0x88, 0xe5, 0x90, 0x3c, 0x9d, 0xe6, 0x1e, 0xbd, 0x28, 0xe6, 0x51, 0x2c, 0x07, 0xf6, 0xb4, 0xa3,
	0xde, 0x40, 0xc6, 0x27, 0x71, 0x9f, 0xa6, 0x82, 0x9c, 0xae, 0x18, 0x96, 0x6f, 0x32, 0xae, 0x7a,
	0xdb, 0x66, 0x8c, 0x3d, 0xfc, 0x15, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xd6, 0x90, 0x4e, 0x56, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// AddDistributor method
	AddDistributor(ctx context.Context, in *MsgAddDistributor, opts ...grpc.CallOption) (*MsgAddDistributorResponse, error)
	// RemoveDistributor method
	RemoveDistributor(ctx context.Context, in *MsgRemoveDistributor, opts ...grpc.CallOption) (*MsgRemoveDistributorResponse, error)
	// AddAdmin method
	AddAdmin(ctx context.Context, in *MsgAddAdmin, opts ...grpc.CallOption) (*MsgAddAdminResponse, error)
	// RemoveAdmin method
	RemoveAdmin(ctx context.Context, in *MsgRemoveAdmin, opts ...grpc.CallOption) (*MsgRemoveAdminResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AddDistributor(ctx context.Context, in *MsgAddDistributor, opts ...grpc.CallOption) (*MsgAddDistributorResponse, error) {
	out := new(MsgAddDistributorResponse)
	err := c.cc.Invoke(ctx, "/entangle.distributorsauth.Msg/AddDistributor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveDistributor(ctx context.Context, in *MsgRemoveDistributor, opts ...grpc.CallOption) (*MsgRemoveDistributorResponse, error) {
	out := new(MsgRemoveDistributorResponse)
	err := c.cc.Invoke(ctx, "/entangle.distributorsauth.Msg/RemoveDistributor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddAdmin(ctx context.Context, in *MsgAddAdmin, opts ...grpc.CallOption) (*MsgAddAdminResponse, error) {
	out := new(MsgAddAdminResponse)
	err := c.cc.Invoke(ctx, "/entangle.distributorsauth.Msg/AddAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveAdmin(ctx context.Context, in *MsgRemoveAdmin, opts ...grpc.CallOption) (*MsgRemoveAdminResponse, error) {
	out := new(MsgRemoveAdminResponse)
	err := c.cc.Invoke(ctx, "/entangle.distributorsauth.Msg/RemoveAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// AddDistributor method
	AddDistributor(context.Context, *MsgAddDistributor) (*MsgAddDistributorResponse, error)
	// RemoveDistributor method
	RemoveDistributor(context.Context, *MsgRemoveDistributor) (*MsgRemoveDistributorResponse, error)
	// AddAdmin method
	AddAdmin(context.Context, *MsgAddAdmin) (*MsgAddAdminResponse, error)
	// RemoveAdmin method
	RemoveAdmin(context.Context, *MsgRemoveAdmin) (*MsgRemoveAdminResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AddDistributor(ctx context.Context, req *MsgAddDistributor) (*MsgAddDistributorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDistributor not implemented")
}
func (*UnimplementedMsgServer) RemoveDistributor(ctx context.Context, req *MsgRemoveDistributor) (*MsgRemoveDistributorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDistributor not implemented")
}
func (*UnimplementedMsgServer) AddAdmin(ctx context.Context, req *MsgAddAdmin) (*MsgAddAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAdmin not implemented")
}
func (*UnimplementedMsgServer) RemoveAdmin(ctx context.Context, req *MsgRemoveAdmin) (*MsgRemoveAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAdmin not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AddDistributor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddDistributor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddDistributor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entangle.distributorsauth.Msg/AddDistributor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddDistributor(ctx, req.(*MsgAddDistributor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveDistributor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveDistributor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveDistributor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entangle.distributorsauth.Msg/RemoveDistributor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveDistributor(ctx, req.(*MsgRemoveDistributor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entangle.distributorsauth.Msg/AddAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAdmin(ctx, req.(*MsgAddAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entangle.distributorsauth.Msg/RemoveAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveAdmin(ctx, req.(*MsgRemoveAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "entangle.distributorsauth.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDistributor",
			Handler:    _Msg_AddDistributor_Handler,
		},
		{
			MethodName: "RemoveDistributor",
			Handler:    _Msg_RemoveDistributor_Handler,
		},
		{
			MethodName: "AddAdmin",
			Handler:    _Msg_AddAdmin_Handler,
		},
		{
			MethodName: "RemoveAdmin",
			Handler:    _Msg_RemoveAdmin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "entangle/distributorsauth/tx.proto",
}

func (m *MsgAddDistributor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddDistributor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddDistributor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EndDate != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EndDate))
		i--
		dAtA[i] = 0x18
	}
	if len(m.DistributorAddress) > 0 {
		i -= len(m.DistributorAddress)
		copy(dAtA[i:], m.DistributorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DistributorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddDistributorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddDistributorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddDistributorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveDistributor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveDistributor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveDistributor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DistributorAddress) > 0 {
		i -= len(m.DistributorAddress)
		copy(dAtA[i:], m.DistributorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DistributorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveDistributorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveDistributorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveDistributorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EditOption {
		i--
		if m.EditOption {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.AdminAddress) > 0 {
		i -= len(m.AdminAddress)
		copy(dAtA[i:], m.AdminAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AdminAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAdminResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAdminResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAdminResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AdminAddress) > 0 {
		i -= len(m.AdminAddress)
		copy(dAtA[i:], m.AdminAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AdminAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAdminResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAdminResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAdminResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAddDistributor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DistributorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EndDate != 0 {
		n += 1 + sovTx(uint64(m.EndDate))
	}
	return n
}

func (m *MsgAddDistributorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveDistributor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DistributorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveDistributorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AdminAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EditOption {
		n += 2
	}
	return n
}

func (m *MsgAddAdminResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AdminAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveAdminResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAddDistributor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddDistributor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddDistributor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DistributorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DistributorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			m.EndDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndDate |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddDistributorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddDistributorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddDistributorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveDistributor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveDistributor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveDistributor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DistributorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DistributorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveDistributorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveDistributorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveDistributorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditOption", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditOption = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAdminResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAdminResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAdminResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAdminResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAdminResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAdminResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
